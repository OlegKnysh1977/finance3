&НаСервереБезКонтекста
Функция МесяцСтрокой(НачальнаяДата, КолвоМесяцев)
	
	Возврат Формат(ДобавитьМесяц(НачалоМесяца(НачальнаяДата), КолвоМесяцев - 1), "ДФ='MMMM yyyy'");
	
КонецФункции

&НаКлиенте
Процедура УправлениеВидимостью()
	
	_НачалоМесяца = НачалоМесяца(Объект.НачальнаяДатаПланирования);
	Для НомерМесяца = 1 По 12 Цикл
		СтрокаНомерМесяца = ?(НомерМесяца >= 10, Строка(НомерМесяца), "0" + Строка(НомерМесяца));
		Элементы["ДеревоСумма"+СтрокаНомерМесяца].Видимость = Объект["Месяц"+СтрокаНомерМесяца];
		Элементы["ДеревоСумма"+СтрокаНомерМесяца].Заголовок = МесяцСтрокой(Объект.НачальнаяДатаПланирования, НомерМесяца);
		СтрИмяСтолбца = "Месяц"+Формат(НомерМесяца, "ЧЦ=2; ЧДЦ=0; ЧВН=");
		Элементы[СтрИмяСтолбца].Заголовок = Формат(ДобавитьМесяц(_НачалоМесяца, НомерМесяца - 1), "ДФ='MMMM yyyy'");
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НачальнаяДатаПланированияПриИзменении(Элемент)
	
	Объект.НачальнаяДатаПланирования = НачалоМесяца(Объект.НачальнаяДатаПланирования);
	УправлениеВидимостью();
	
КонецПроцедуры

&НаКлиенте
Процедура НачальнаяДатаПланированияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Объект.НачальнаяДатаПланирования = ДобавитьМесяц(Объект.НачальнаяДатаПланирования, Направление);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииФлагаМесяца(Элемент)
	
	НомерИзменяемогоСтолбца = Число(Прав(Элемент.Имя,2));
	
	Для НомерМесяца = 1 По НомерИзменяемогоСтолбца Цикл
		СтрИмяСтолбца = "Месяц"+Формат(НомерМесяца, "ЧЦ=2; ЧДЦ=0; ЧВН=");
		Объект[СтрИмяСтолбца] = Истина;
	КонецЦикла;
	
	Для НомерМесяца = НомерИзменяемогоСтолбца + 1 По 12 Цикл
		СтрИмяСтолбца = "Месяц"+Формат(НомерМесяца, "ЧЦ=2; ЧДЦ=0; ЧВН=");
		Объект[СтрИмяСтолбца] = Ложь;
	КонецЦикла;
	
	УправлениеВидимостью();
	
КонецПроцедуры

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ПриИзмененииСуммы()

	Сообщить("Йохо!!!");

КонецПроцедуры // ПриИзмененииСуммы()
 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
    // Создание и заполнение "обычного" объекта прикладного типа ДеревоЗначений,
    // который будет отображен на управляемой форме
    ДеревоОбъект = Новый ДеревоЗначений;
    ДеревоОбъект.Колонки.Добавить("СтатьяДоходовИРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиДоходовИРасходов"));
	ДеревоОбъект.Колонки.Добавить("Сумма01", Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(15,2)));
	ДеревоОбъект.Колонки.Добавить("Сумма02", Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(15,2)));
	ДеревоОбъект.Колонки.Добавить("Сумма03", Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(15,2)));
	ДеревоОбъект.Колонки.Добавить("Сумма04", Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(15,2)));
	ДеревоОбъект.Колонки.Добавить("Сумма05", Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(15,2)));
	ДеревоОбъект.Колонки.Добавить("Сумма06", Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(15,2)));
	ДеревоОбъект.Колонки.Добавить("Сумма07", Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(15,2)));
	ДеревоОбъект.Колонки.Добавить("Сумма08", Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(15,2)));
	ДеревоОбъект.Колонки.Добавить("Сумма09", Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(15,2)));
	ДеревоОбъект.Колонки.Добавить("Сумма10", Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(15,2)));
	ДеревоОбъект.Колонки.Добавить("Сумма11", Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(15,2)));
	ДеревоОбъект.Колонки.Добавить("Сумма12", Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(15,2)));

    // Создание Реквизита формы типа ДанныеФормыДерево
    МассивДобавляемыхРеквизитов = Новый Массив;
    МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Дерево", 
        Новый ОписаниеТипов("ДеревоЗначений")));
	МассивДобавляемыхРеквизитов[0].СохраняемыеДанные = Истина;
    Для Каждого Колонка Из ДеревоОбъект.Колонки Цикл
        МассивДобавляемыхРеквизитов.Добавить(
           Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, "Дерево"));
    КонецЦикла;
    ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);

    // Преобразование объекта прикладного типа ДеревоЗначений 
    // в реквизит управляемой формы (данные формы)
    ЗначениеВРеквизитФормы(ДеревоОбъект, "Дерево");

    // Создание элемента формы типа ТаблицаФормы для отображения дерева
    ЭлементДерево = Элементы.Добавить("Дерево", Тип("ТаблицаФормы"),Элементы.ГруппаОсновноеПланирование);
    ЭлементДерево.ПутьКДанным = "Дерево";
    ЭлементДерево.Отображение = ОтображениеТаблицы.Дерево;
	
	Для Каждого Колонка Из ДеревоОбъект.Колонки Цикл
		
		Попытка
			НовыйЭлемент = Элементы.Добавить("Дерево"+Колонка.Имя, Тип("ПолеФормы"), ЭлементДерево);
		Исключение
			А=0;
		КонецПопытки;
			
        НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
        НовыйЭлемент.ПутьКДанным = "Дерево." + Колонка.Имя;
		
		Если Колонка.Имя = "СтатьяДоходовИРасходов" Тогда
		
			НовыйЭлемент.Заголовок = "Группа статей затрат";
			
		Иначе
			
			НовыйЭлемент.УстановитьДействие("ПриИзменении", "ПриИзмененииСуммы");
		
		КонецЕсли;
		
	КонецЦикла;
	
	ПрочитатьТаблицуПланированиеНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеВидимостью();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтатьи(Команда)
	
	Если Объект.Планирование.Количество() <> 0 Тогда
		
		Если Вопрос("В документе уже есть данные для планирования. Все равно очистить документ?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьСтатьиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьВеткиДерева(РодительскаяВыборка, Дерево)
	
	ВыборкаДетальныеЗаписи = РодительскаяВыборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.ЭтоГруппа Тогда
		
			НоваяСтрока = Дерево.Строки.Добавить();
			НоваяСтрока.СтатьяДоходовИРасходов = ВыборкаДетальныеЗаписи.СтатьяДоходовИРасходов;
			НоваяСтрока.Сумма01 = ВыборкаДетальныеЗаписи.Сумма01;
			НоваяСтрока.Сумма02 = ВыборкаДетальныеЗаписи.Сумма02;
			НоваяСтрока.Сумма03 = ВыборкаДетальныеЗаписи.Сумма03;
			НоваяСтрока.Сумма04 = ВыборкаДетальныеЗаписи.Сумма04;
			НоваяСтрока.Сумма05 = ВыборкаДетальныеЗаписи.Сумма05;
			НоваяСтрока.Сумма06 = ВыборкаДетальныеЗаписи.Сумма06;
			НоваяСтрока.Сумма07 = ВыборкаДетальныеЗаписи.Сумма07;
			НоваяСтрока.Сумма08 = ВыборкаДетальныеЗаписи.Сумма08;
			НоваяСтрока.Сумма09 = ВыборкаДетальныеЗаписи.Сумма09;
			НоваяСтрока.Сумма10 = ВыборкаДетальныеЗаписи.Сумма10;
			НоваяСтрока.Сумма11 = ВыборкаДетальныеЗаписи.Сумма11;
			НоваяСтрока.Сумма12 = ВыборкаДетальныеЗаписи.Сумма12;
			
			СформироватьВеткиДерева(ВыборкаДетальныеЗаписи, НоваяСтрока);
		
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьВеткуДерева(Дерево, ТабПланирование)
	
	Для каждого ТекущаяСтрока Из Дерево.Строки Цикл
	
		НоваяСтрока = ТабПланирование.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
		
		СохранитьВеткуДерева(ТекущаяСтрока, ТабПланирование);
	
	КонецЦикла; 
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтатьиНаСервере()
	
	Объект.Планирование.Очистить();
	 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиДоходовИРасходов.Ссылка КАК СтатьяДоходовИРасходов,
		|	СтатьиДоходовИРасходов.ЭтоГруппа,
		|	ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.СуммаРасходаОборот, 0) КАК Сумма01,
		|	ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.СуммаРасходаОборот, 0) КАК Сумма02,
		|	ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.СуммаРасходаОборот, 0) КАК Сумма03,
		|	ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.СуммаРасходаОборот, 0) КАК Сумма04,
		|	ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.СуммаРасходаОборот, 0) КАК Сумма05,
		|	ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.СуммаРасходаОборот, 0) КАК Сумма06,
		|	ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.СуммаРасходаОборот, 0) КАК Сумма07,
		|	ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.СуммаРасходаОборот, 0) КАК Сумма08,
		|	ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.СуммаРасходаОборот, 0) КАК Сумма09,
		|	ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.СуммаРасходаОборот, 0) КАК Сумма10,
		|	ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.СуммаРасходаОборот, 0) КАК Сумма11,
		|	ЕСТЬNULL(ДвиженияДенежныхСредствОбороты.СуммаРасходаОборот, 0) КАК Сумма12
		|ИЗ
		|	Справочник.СтатьиДоходовИРасходов КАК СтатьиДоходовИРасходов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДенежныхСредств.Обороты(&Дата1, &Дата2, , ВалютаДвижения = &Рубль) КАК ДвиженияДенежныхСредствОбороты
		|		ПО (ДвиженияДенежныхСредствОбороты.СтатьяДоходовРасходов = СтатьиДоходовИРасходов.Ссылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтатьиДоходовИРасходов.Наименование ИЕРАРХИЯ";

	Запрос.УстановитьПараметр("Дата1", ДобавитьМесяц(НачалоМесяца(ТекущаяДата()), -3));
	Запрос.УстановитьПараметр("Дата2", НачалоМесяца(ТекущаяДата()) - 1);
	Запрос.УстановитьПараметр("Рубль", Константы.ОсновнаяВалютаУчета.Получить());

	РезультатЗапроса = Запрос.Выполнить();

	Дерево = РеквизитФормыВЗначение("Дерево");
	Дерево.Строки.Очистить();
	СформироватьВеткиДерева(РезультатЗапроса, Дерево);
	ЗначениеВРеквизитФормы(Дерево, "Дерево");
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьТаблицуПланированиеНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланированиеДоходовИРасходовПланирование.Ссылка,
		|	ПланированиеДоходовИРасходовПланирование.СтатьяДоходовИРасходов,
		|	ПланированиеДоходовИРасходовПланирование.Сумма01,
		|	ПланированиеДоходовИРасходовПланирование.Сумма02,
		|	ПланированиеДоходовИРасходовПланирование.Сумма03,
		|	ПланированиеДоходовИРасходовПланирование.Сумма04,
		|	ПланированиеДоходовИРасходовПланирование.Сумма05,
		|	ПланированиеДоходовИРасходовПланирование.Сумма06,
		|	ПланированиеДоходовИРасходовПланирование.Сумма07,
		|	ПланированиеДоходовИРасходовПланирование.Сумма08,
		|	ПланированиеДоходовИРасходовПланирование.Сумма09,
		|	ПланированиеДоходовИРасходовПланирование.Сумма10,
		|	ПланированиеДоходовИРасходовПланирование.Сумма11,
		|	ПланированиеДоходовИРасходовПланирование.Сумма12
		|ПОМЕСТИТЬ ВТ_ТабличнаяЧасть
		|ИЗ
		|	Документ.ПланированиеДоходовИРасходов.Планирование КАК ПланированиеДоходовИРасходовПланирование
		|ГДЕ
		|	ПланированиеДоходовИРасходовПланирование.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтатьиДоходовИРасходов.Ссылка КАК СтатьяДоходовИРасходов,
		|	СтатьиДоходовИРасходов.ЭтоГруппа,
		|	ВТ_ТабличнаяЧасть.Сумма01,
		|	ВТ_ТабличнаяЧасть.Сумма02,
		|	ВТ_ТабличнаяЧасть.Сумма03,
		|	ВТ_ТабличнаяЧасть.Сумма04,
		|	ВТ_ТабличнаяЧасть.Сумма05,
		|	ВТ_ТабличнаяЧасть.Сумма06,
		|	ВТ_ТабличнаяЧасть.Сумма07,
		|	ВТ_ТабличнаяЧасть.Сумма08,
		|	ВТ_ТабличнаяЧасть.Сумма09,
		|	ВТ_ТабличнаяЧасть.Сумма10,
		|	ВТ_ТабличнаяЧасть.Сумма11,
		|	ВТ_ТабличнаяЧасть.Сумма12
		|ИЗ
		|	Справочник.СтатьиДоходовИРасходов КАК СтатьиДоходовИРасходов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть
		|		ПО ВТ_ТабличнаяЧасть.СтатьяДоходовИРасходов = СтатьиДоходовИРасходов.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтатьиДоходовИРасходов.Наименование ИЕРАРХИЯ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ТабличнаяЧасть";

	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);

	РезультатЗапроса = Запрос.Выполнить();

	Дерево = РеквизитФормыВЗначение("Дерево");
	СформироватьВеткиДерева(РезультатЗапроса, Дерево);
	ЗначениеВРеквизитФормы(Дерево, "Дерево");
	
КонецПроцедуры

&НаСервере

Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Дерево = РеквизитФормыВЗначение("Дерево");
	
	Объект.Планирование.Очистить();
	
	СохранитьВеткуДерева(Дерево, ТекущийОбъект.Планирование);
	
КонецПроцедуры
