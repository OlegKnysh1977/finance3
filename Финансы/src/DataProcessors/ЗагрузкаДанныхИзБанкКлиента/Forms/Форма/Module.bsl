&НаСервереБезКонтекста
Функция ПолучитьДату(Стр)
	
	Если СтрДлина(Стр) = 10 Тогда
		Попытка
			Возврат Дата(Прав(Стр, 4), Сред(Стр, 4, 2), Лев(Стр, 2));
		Исключение
			ТекстСообщения = "При преобразовании даты %1 возникла ошибка %2.";
			Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Строка(Стр), ОписаниеОшибки()));
			Возврат Дата(1,1,1);
		КонецПопытки;
	Иначе
		Возврат Дата(1,1,1);
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЧисло(Стр)
	
	Попытка
		Возврат Число(СтрЗаменить(Стр, ",", ""));
	Исключение
		ТекстСообщения = "При преобразовании даты %1 возникла ошибка %2.";
		Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Строка(Стр), ОписаниеОшибки()));
		Возврат Дата(1,1,1);
	КонецПопытки;
	
КонецФункции

&НаСервере
Процедура ОбработатьЗагруженнуюСтроку(ЗагруженнаяСтрока)
	
	СтрокаСчетаДляБанкКлиента = "";
	ДлинаСтрокаСчетаДляБанкКлиента = 0;
	
	Если ЗначениеЗаполнено(Объект.СчетУчета) Тогда
		СтрокаСчетаДляБанкКлиента = Объект.СчетУчета.СтрокаСчетаДляБанкКлиента;
		ДлинаСтрокаСчетаДляБанкКлиента = СтрДлина(СтрокаСчетаДляБанкКлиента);
	КонецЕсли;
	
	МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЗагруженнаяСтрока, ";");
	
	Если МассивПодстрок.Количество() = 6 Тогда
	
		НС = Объект.ПредварительныеДанные.Добавить();
		
		НС.ПрочитаннаяСтрока	= ЗагруженнаяСтрока;
		НС.ДатаТранзакции		= ПолучитьДату(МассивПодстрок[1]);
		НС.ДатаДвижения			= ПолучитьДату(МассивПодстрок[2]);
		НС.ТочкаОплаты			= МассивПодстрок[3];
		НС.СуммаПлатежа			= ПолучитьЧисло(МассивПодстрок[5]);
		
		Если ДлинаСтрокаСчетаДляБанкКлиента <> 0 Тогда
			
			Если Лев(НС.ТочкаОплаты, ДлинаСтрокаСчетаДляБанкКлиента) = СтрокаСчетаДляБанкКлиента Тогда
				
				НС.ТочкаОплаты = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(Сред(НС.ТочкаОплаты, ДлинаСтрокаСчетаДляБанкКлиента + 1), " ");
				
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуЦелейЗагрузки(ТаблицаДанных)
	
	МассивТочекОплаты = Новый Массив;
	
	Для каждого Стр Из Объект.ПредварительныеДанные Цикл
		
		Если МассивТочекОплаты.Найти(Стр.ТочкаОплаты) = Неопределено Тогда
			МассивТочекОплаты.Добавить(Стр.ТочкаОплаты);
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствияТочекОплатыИЦелейЗаргузки.ТочкаОплаты,
		|	СоответствияТочекОплатыИЦелейЗаргузки.МестоПлатежа,
		|	СоответствияТочекОплатыИЦелейЗаргузки.СтатьяДоходовРасходов
		|ИЗ
		|	РегистрСведений.СоответствияТочекОплатыИЦелейЗаргузки КАК СоответствияТочекОплатыИЦелейЗаргузки
		|ГДЕ
		|	СоответствияТочекОплатыИЦелейЗаргузки.ТочкаОплаты В(&МассивТочекОплаты)";

	Запрос.УстановитьПараметр("МассивТочекОплаты", МассивТочекОплаты);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСоответствияТочекОплатыИЦелейЗаргузки()
Перем ТаблицаДанных;

	ЗаполнитьТаблицуЦелейЗагрузки(ТаблицаДанных);

	Для каждого Стр Из Объект.ПредварительныеДанные Цикл
		
		НайденнаяСтрока = ТаблицаДанных.Найти(Стр.ТочкаОплаты, "ТочкаОплаты");
		
		Если НайденнаяСтрока = Неопределено Тогда
			ТекстСообщения = "Точка оплаты ""%1"" не найдена.";
			Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Стр.ТочкаОплаты));
		Иначе
		    Стр.МестоПлатежа			= НайденнаяСтрока.МестоПлатежа;
			Стр.СтатьяДоходовРасходов	= НайденнаяСтрока.СтатьяДоходовРасходов;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеНаСервере(АдресДанныхФайла)
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресДанныхФайла);
	
	Если ТипЗнч(ДвоичныеДанные) <> Тип("ДвоичныеДанные") Тогда
		Возврат;
	КонецЕсли;
	
	ИмяВременногоТекстовогоФайла = ПолучитьИмяВременногоФайла();
	
	ДвоичныеДанные.Записать(ИмяВременногоТекстовогоФайла);
	Текст = Новый ЧтениеТекста(ИмяВременногоТекстовогоФайла, КодировкаТекста.ANSI);
	
	Объект.ПредварительныеДанные.Очистить();
	
	Стр = Текст.ПрочитатьСтроку();
	
	Пока Стр <> Неопределено Цикл
		
		ОбработатьЗагруженнуюСтроку(Стр);
		
	    Стр = Текст.ПрочитатьСтроку();
		
	КонецЦикла;
	
	Текст.Закрыть();
	
	ЗаполнитьСоответствияТочекОплатыИЦелейЗаргузки();
	
	Попытка
		УдалитьФайлы(ИмяВременногоТекстовогоФайла);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНовыеЦелиЗагрузкиНаСервере(МестоПлатежа = Неопределено, СтатьяДоходовРасходов = Неопределено)
Перем ТаблицаДанных;

	ЗаполнитьТаблицуЦелейЗагрузки(ТаблицаДанных);
	
	НачатьТранзакцию();
	
	Для каждого Стр Из Объект.ПредварительныеДанные Цикл
		
		НайденнаяСтрока = ТаблицаДанных.Найти(Стр.ТочкаОплаты, "ТочкаОплаты");
		
		Если НайденнаяСтрока = Неопределено Тогда
			
			ТекстСообщения = "Добавляю точку оплаты ""%1"" по данным строки %2.";
			Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Стр.ТочкаОплаты, Стр.НомерСтроки));
			
			НаборЗаписей = РегистрыСведений.СоответствияТочекОплатыИЦелейЗаргузки.СоздатьНаборЗаписей();
			    
			НаборЗаписей.Отбор.ТочкаОплаты.Установить(Стр.ТочкаОплаты);
			    
			НоваяЗапись = НаборЗаписей.Добавить();

			НоваяЗапись.ТочкаОплаты				= Стр.ТочкаОплаты;
			НоваяЗапись.МестоПлатежа			= МестоПлатежа;
			НоваяЗапись.СтатьяДоходовРасходов	= СтатьяДоходовРасходов;

			НаборЗаписей.Записать();

		КонецЕсли;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаСервере
Функция СохранитьДанныеНаСервере()
	
	ЕстьОшибки = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.СчетУчета) Тогда
		ТекстСообщения = "Не заполнен счет учета.";
		Сообщить(ТекстСообщения);
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Для Каждого Стр Из Объект.ПредварительныеДанные Цикл
		
		Если Не ЗначениеЗаполнено(Стр.ДатаТранзакции) Тогда
			ТекстСообщения = "В строке %1 не заполнена дата транзакции.";
			Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Стр.НомерСтроки));
			ЕстьОшибки = Истина;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Стр.СтатьяДоходовРасходов) Тогда
			ТекстСообщения = "В строке %1 не заполнена статья доходов / расходов.";
			Сообщить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Стр.НомерСтроки));
			ЕстьОшибки = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЕстьОшибки Тогда
		Возврат Ложь;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Для Каждого Стр Из Объект.ПредварительныеДанные Цикл
		
		Если Стр.СуммаПлатежа >= 0 Тогда
			НовыйДокумент = Документы.ПриходДенежныхСредств.СоздатьДокумент();
			НовыйДокумент.СуммаДокумента = Стр.СуммаПлатежа;
			НовыйДокумент.СразуЗачислять = Истина;
		Иначе
			НовыйДокумент = Документы.РасходДенежныхСредств.СоздатьДокумент();
			НовыйДокумент.МестоРасходовДенежныхСредств = Стр.МестоПлатежа;
			НовыйДокумент.СуммаДокумента = -Стр.СуммаПлатежа;
			НовыйДокумент.СразуСписывать = Истина;
		КонецЕсли;
		НовыйДокумент.Дата = ?(Стр.ДатаДвижения = Дата(1,1,1), Стр.ДатаТранзакции, Стр.ДатаДвижения);
		НовыйДокумент.СчетУчета = Объект.СчетУчета;
		НовыйДокумент.ВалютаДокумента = Объект.СчетУчета.ВалютаСчета;
		НовыйДокумент.Комментарий = Стр.ТочкаОплаты;
		
		НоваяСтрока = НовыйДокумент.Расшифровка.Добавить();
		Если Стр.СуммаПлатежа >= 0 Тогда
			НоваяСтрока.СтатьяДоходов = Стр.СтатьяДоходовРасходов;
			НоваяСтрока.Цена = Стр.СуммаПлатежа;
			НоваяСтрока.Сумма = Стр.СуммаПлатежа;
		Иначе
			НоваяСтрока.СтатьяРасходов = Стр.СтатьяДоходовРасходов;
			НоваяСтрока.Цена = -Стр.СуммаПлатежа;
			НоваяСтрока.Сумма = -Стр.СуммаПлатежа;
		КонецЕсли;
		НоваяСтрока.Количество = 1;
		
		НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура КнопкаПрочитатьДанные(Команда)
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Фильтр = "Файлы обмена (*.csv)|*.csv";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.Заголовок = "Выберите файлы";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ФайлДляПроверки = Новый Файл(ДиалогОткрытияФайла.ПолноеИмяФайла);
		Если ФайлДляПроверки.Существует() Тогда
			Если ФайлДляПроверки.Размер() <= 10000000 Тогда
				ДвоичныеДанные = Новый ДвоичныеДанные(ДиалогОткрытияФайла.ПолноеИмяФайла);
				АдресДанныхФайла = ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
				ПрочитатьДанныеНаСервере(АдресДанныхФайла);
			Иначе
				ПоказатьПредупреждение(, "Ошибка! Файл " + ДиалогОткрытияФайла.ПолноеИмяФайла + " имеет размер больше 10 Мб.");
			КонецЕсли;
		Иначе
			ПоказатьПредупреждение(, "Ошибка!Файл " + ДиалогОткрытияФайла.ПолноеИмяФайла + " не существует.");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТочкиОплатИЦелейЗагрузки(Команда)
	
	ОткрытьФорму("РегистрСведений.СоответствияТочекОплатыИЦелейЗаргузки.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНовыеЦелиЗагрузки(Команда)
	
	ВремФорма = ПолучитьФорму("Обработка.ЗагрузкаДанныхИзБанкКлиента.Форма.ФормаЦелейСоЗначениямиПоУмолчанию");
	СтруктураСДаными = ВремФорма.ОткрытьМодально();
	
	Если ТипЗнч(СтруктураСДаными) <> Тип("Структура") Тогда
		ЗаполнитьНовыеЦелиЗагрузкиНаСервере();
	Иначе
		ЗаполнитьНовыеЦелиЗагрузкиНаСервере(СтруктураСДаными.МестоПлатежа, СтруктураСДаными.СтатьяДоходовРасходов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкаСохранитьДанныеВБазе(Команда)
	
	Если СохранитьДанныеНаСервере() Тогда
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры
