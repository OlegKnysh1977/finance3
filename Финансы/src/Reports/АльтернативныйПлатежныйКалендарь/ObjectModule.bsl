Функция СформироватьТаблицуОтчета()
	
	ТаблицаОтчета = Новый ТаблицаЗначений;
	ТаблицаОтчета.Колонки.Добавить("СчетУчета", Новый ОписаниеТипов("СправочникСсылка.СчетаУчета"));
	ТаблицаОтчета.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	ТаблицаОтчета.Колонки.Добавить("ФактНачОстаток", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаОтчета.Колонки.Добавить("ФактПриход", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаОтчета.Колонки.Добавить("ФактРасход", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаОтчета.Колонки.Добавить("ФактКонОстаток", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаОтчета.Колонки.Добавить("ПланНачОстаток", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаОтчета.Колонки.Добавить("ПланПриход", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаОтчета.Колонки.Добавить("ПланРасход", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаОтчета.Колонки.Добавить("ПланКонОстаток", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаОтчета.Колонки.Добавить("ИтогНачОстаток", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаОтчета.Колонки.Добавить("ИтогПриход", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаОтчета.Колонки.Добавить("ИтогРасход", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаОтчета.Колонки.Добавить("ИтогКонОстаток", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетаУчета.Ссылка КАК СчетУчета
		|ПОМЕСТИТЬ ВТ_СчетаПланирования
		|ИЗ
		|	Справочник.СчетаУчета КАК СчетаУчета
		|ГДЕ
		|	СчетаУчета.ИспользоватьВПланировании
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетаУчета.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаПланирования.СчетУчета КАК СчетУчета
		|ИЗ
		|	ВТ_СчетаПланирования КАК ВТ_СчетаПланирования
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетУчета
		|АВТОУПОРЯДОЧИВАНИЕ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиДенежныхСредствОстаткиИОбороты.СчетУчета КАК СчетУчета,
		|	ОстаткиДенежныхСредствОстаткиИОбороты.Период КАК Период,
		|	ЕСТЬNULL(ОстаткиДенежныхСредствОстаткиИОбороты.СуммаНачальныйОстаток, 0) КАК ФактНачОстаток,
		|	ЕСТЬNULL(ОстаткиДенежныхСредствОстаткиИОбороты.СуммаПриход, 0) КАК ФактПриход,
		|	ЕСТЬNULL(ОстаткиДенежныхСредствОстаткиИОбороты.СуммаРасход, 0) КАК ФактРасход,
		|	ЕСТЬNULL(ОстаткиДенежныхСредствОстаткиИОбороты.СуммаКонечныйОстаток, 0) КАК ФактКонОстаток
		|ИЗ
		|	РегистрНакопления.ОстаткиДенежныхСредств.ОстаткиИОбороты(
		|			&Дата1,
		|			&Дата2,
		|			День,
		|			ДвиженияИГраницыПериода,
		|			СчетУчета В
		|				(ВЫБРАТЬ
		|					ВТ_СчетаПланирования.СчетУчета
		|				ИЗ
		|					ВТ_СчетаПланирования КАК ВТ_СчетаПланирования)) КАК ОстаткиДенежныхСредствОстаткиИОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПланируемыеРасходыОстаткиИОбороты.СчетУчета КАК СчетУчета,
		|	ПланируемыеРасходыОстаткиИОбороты.Период КАК Период,
		|	-ЕСТЬNULL(ПланируемыеРасходыОстаткиИОбороты.СуммаВзаиморасчетовНачальныйОстаток, 0) КАК ПланНачОстаток,
		|	-ЕСТЬNULL(ПланируемыеРасходыОстаткиИОбороты.СуммаВзаиморасчетовПриход, 0) КАК ПланПриход,
		|	-ЕСТЬNULL(ПланируемыеРасходыОстаткиИОбороты.СуммаВзаиморасчетовРасход, 0) КАК ПланРасход,
		|	-ЕСТЬNULL(ПланируемыеРасходыОстаткиИОбороты.СуммаВзаиморасчетовКонечныйОстаток, 0) КАК ПланКонОстаток
		|ИЗ
		|	РегистрНакопления.ПланируемыеРасходы.ОстаткиИОбороты(
		|			&Дата1,
		|			&Дата2,
		|			День,
		|			ДвиженияИГраницыПериода,
		|			СчетУчета В
		|				(ВЫБРАТЬ
		|					ВТ_СчетаПланирования.СчетУчета
		|				ИЗ
		|					ВТ_СчетаПланирования КАК ВТ_СчетаПланирования)) КАК ПланируемыеРасходыОстаткиИОбороты";
	
	Запрос.УстановитьПараметр("Дата1", НачалоДня(Дата1));
	Запрос.УстановитьПараметр("Дата2", КонецДня(Дата2));
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтартДата = НачалоДня(Дата1);
	СтопДата = НачалоДня(Дата2);
	СтруктураПоиска = Новый Структура("СчетУчета,Период");
	
	ВыборкаСчетаУчета = МассивРезультатов[1].Выбрать();
	ВыборкаФакт = МассивРезультатов[2].Выбрать();
	ВыборкаПлан = МассивРезультатов[3].Выбрать();
	
	Пока ВыборкаСчетаУчета.Следующий() Цикл
		
		ТекДата = НачалоДня(Дата1);
		ФактНакопительныйОстаток = 0;
		ПланНакопительныйОстаток = 0;
		
		Пока ТекДата <= СтопДата Цикл
		
			НоваяСтрока = ТаблицаОтчета.Добавить();
			НоваяСтрока.СчетУчета = ВыборкаСчетаУчета.СчетУчета;
			НоваяСтрока.Период = ТекДата;
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, НоваяСтрока);
			
			ВыборкаФакт.Сбросить();
			ВыборкаПлан.Сбросить();
			
			Если ВыборкаФакт.НайтиСледующий(СтруктураПоиска) Тогда
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаФакт, "ФактНачОстаток,ФактПриход,ФактРасход");
			КонецЕсли;
		
			Если ВыборкаПлан.НайтиСледующий(СтруктураПоиска) Тогда
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПлан, "ПланНачОстаток,ПланПриход,ПланРасход");
			КонецЕсли;
			
			Если ТекДата = СтартДата Тогда
				// Первая запись
				ФактНакопительныйОстаток = НоваяСтрока.ФактНачОстаток + НоваяСтрока.ФактПриход - НоваяСтрока.ФактРасход;
				ПланНакопительныйОстаток = НоваяСтрока.ПланНачОстаток + НоваяСтрока.ПланПриход - НоваяСтрока.ПланРасход;
			Иначе
				НоваяСтрока.ФактНачОстаток = ФактНакопительныйОстаток;
				НоваяСтрока.ПланНачОстаток = ПланНакопительныйОстаток;
				ФактНакопительныйОстаток = ФактНакопительныйОстаток + НоваяСтрока.ФактПриход - НоваяСтрока.ФактРасход;
				ПланНакопительныйОстаток = ПланНакопительныйОстаток + НоваяСтрока.ПланПриход - НоваяСтрока.ПланРасход;
			КонецЕсли;
			НоваяСтрока.ФактКонОстаток = ФактНакопительныйОстаток;
			НоваяСтрока.ПланКонОстаток = ПланНакопительныйОстаток;
			
			НоваяСтрока.ИтогНачОстаток = НоваяСтрока.ФактНачОстаток + НоваяСтрока.ПланНачОстаток;
			НоваяСтрока.ИтогПриход = НоваяСтрока.ФактПриход + НоваяСтрока.ПланПриход;
			НоваяСтрока.ИтогРасход = НоваяСтрока.ФактРасход + НоваяСтрока.ПланРасход;
			НоваяСтрока.ИтогКонОстаток = НоваяСтрока.ФактКонОстаток + НоваяСтрока.ПланКонОстаток;
			
			ТекДата = ТекДата + 60*60*24;
		
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаОтчета;
	
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//КонецЦикла;
	
КонецФункции

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ТаблицаРезультат = СформироватьТаблицуОтчета();
	
	// Сформируем структуру внешних данных
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("РасчетнаяТаблица", ТаблицаРезультат);
	
	Настройки = КомпоновщикНастроек.Настройки;
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	// Инициализируем процессор СКД
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	ДокументРезультат.Очистить();
	
	// Инициализируем процессор вывода
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры
